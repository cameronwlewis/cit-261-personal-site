{"version":3,"sources":["../../../public/javascripts/test.js"],"names":["accessToken","getAccessToken","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","debug","responseText","debug2","open","send","window","addEventListener","load","event","removeEventListener","imageLoader","document","getElementById","handleImageUpload","canvas","ctx","getContext","selectedImage","submitImage","sendToEmotionAPI","e","reader","FileReader","onload","img","Image","width","height","drawImage","src","target","result","files","hi","readAsDataURL","style","visibility","rapid","RapidAPI","strongestEmotion","call","on","payload","scores","emotionScore","key","console","log","getSpotifyPlaylist","showPlaylistSuggestion","name","artwork","url","innerHTML","href","spotify","SpotifyWebApi","setAccessToken","searchPlaylists","limit","err","data","error","playlist_Name","playlists","items","playlist_Artwork","images","playlist_URL","external_urls"],"mappings":"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","file":"test.js","sourcesContent":["let accessToken = '';\n\nfunction getAccessToken() {\n    let xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function() {\n        if (this.readyState === 4 && this.status === 200) {\n            let debug = this.responseText;\n            accessToken = this.responseText;\n            let debug2 = 'hi';\n        }\n    };\n    xhttp.open(\"GET\", \"http://localhost:3000/accessToken\", true);\n    xhttp.send();\n}\n\nwindow.addEventListener(\"load\", function load(event){\n    window.removeEventListener(\"load\", load, false); //remove listener, no longer needed\n    getAccessToken();\n},false);\n\n// put code here that searches playlists, and see if it works!\n\nlet imageLoader = document.getElementById('imageLoader');\nimageLoader.addEventListener('change', handleImageUpload, false);\nlet canvas = document.getElementById('uploadCanvas');\nlet ctx = canvas.getContext('2d');\n\nlet selectedImage;\nlet submitImage = document.getElementById('submitImage');\nsubmitImage.addEventListener('click', sendToEmotionAPI); //todo: uncomment when done debugging/testing and delete line below\n//submitImage.addEventListener('click', getSpotifyPlaylist);\n\n\nfunction handleImageUpload(e){\n    let reader = new FileReader();\n    reader.onload = function(event){\n        let img = new Image();\n        img.onload = function(){\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img,0,0);\n        };\n        img.src = event.target.result;\n        selectedImage = document.getElementById('imageLoader').files;\n        let hi = 'hello';\n\n    };\n    reader.readAsDataURL(e.target.files[0]);\n    document.getElementById('submitImage').style.visibility='visible';\n}\n\nfunction sendToEmotionAPI(){\n    let rapid =  new RapidAPI(\"cit261-app_59643290e4b02799980f80b8\", \"cc8619fe-d5c5-47e6-9393-7f698b2c22c4\");\n    let strongestEmotion = \"\";\n    rapid.call('MicrosoftEmotionAPI', 'getEmotionRecognition', {\n        'subscriptionKey': '449155b07e884d8ea5bae531f5cf47ec',\n        'image': selectedImage[0]\n\n    }).on('success', function (payload) {\n\n        let scores = payload[0].scores;\n\n        let emotionScore = 0;\n        for (let key in scores) {\n            if (scores[key] > emotionScore) {\n                emotionScore = scores[key];\n                console.log(emotionScore);\n                strongestEmotion = key;\n                console.log(strongestEmotion);\n            }\n        }\n        // our strongest emotion from the photo has been found!\n        console.log(\"final: \" + strongestEmotion);\n        getSpotifyPlaylist(strongestEmotion)\n\n    }).on('error', function (payload) {\n\n        console.log('Error!');\n    });\n\n}\n\n\nfunction showPlaylistSuggestion(name, artwork, url){\n    document.getElementById('playlist-artwork').style.visibility = 'visible';\n    document.getElementById('playlist-artwork').src = artwork;\n    document.getElementById('playlist-name').innerHTML = name;\n    document.getElementById('playlist-url').innerHTML = 'Click here to open playlist';\n    document.getElementById('playlist-url').href = url;\n}\n\nfunction getSpotifyPlaylist(strongestEmotion) {\n    let spotify = new SpotifyWebApi();\n    spotify.setAccessToken(accessToken);\n\n    spotify.searchPlaylists(strongestEmotion, {limit: 1}, function (err, data) {\n\n        if (err) console.error(err);\n        else {\n            console.log('Playlist: ', data);\n            var playlist_Name = data.playlists.items[0].name;\n            var playlist_Artwork = data.playlists.items[0].images[0].url;\n            var playlist_URL = data.playlists.items[0].external_urls.spotify;\n            console.log(playlist_Name);\n            console.log(playlist_URL);\n            showPlaylistSuggestion(playlist_Name, playlist_Artwork, playlist_URL)\n        }\n    });\n}"]}